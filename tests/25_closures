// Chapter 25 - Closures

// --------------------------------------------------------
// var x = "global";
// fun outer()
// {
//   var x = "outer";
//   fun inner()
//   {
//     print x;
//   }
//   inner();
// }
// outer(); // should print "outer"

// --------------------------------------------------------
// Output:
// > local
// fun makeClosure() {
//   var local = "local";
//     fun closure() {
//       print local;
//   }
//   return closure;
// }

// var closure = makeClosure();
// closure();

// --------------------------------------------------------
// output:
// > doughnut
// > bagel

// fun makeClosure(value) {
//   fun closure() {
//     print value;
//   }
//   return closure;
// }
// var doughnut = makeClosure("doughnut");
// var bagel = makeClosure("bagel");
// doughnut();
// bagel();

// --------------------------------------------------------
// Expected output:
// return from outer
// create inner closure
// value

// fun outer() {
//   var x = "value";
//   fun middle() {
//     fun inner() {
//       print x;
//     }

//     print "create inner closure";
//     return inner;
//   }

//   print "return from outer";
//   return middle;
// }

// var middle = outer();
// var inner = middle();
// inner();

// --------------------------------------------------------
// Expected output:
// 0004    9 OP_CLOSURE          2 <fn inner>
// 0006      |                     upvalue 0
// 0008      |                     local 1
// 0010      |                     upvalue 1
// 0012      |                     local 2

// fun outer() {
//   var a = 1;
//   var b = 2;
//   fun middle() {
//     var c = 3;
//     var d = 4;
//     fun inner() {
//       print a + c + b + d;
//     }
//   }
// }

// --------------------------------------------------------
// Output:
// prints "outside"

// fun outer() {
//   var x = "outside";
//   fun inner() {
//     print x;
//   }
//   inner();
// }
// outer();

// --------------------------------------------------------
// Output:
// prints "outside"

fun outer() {
  var x = "outside";
  fun inner() {
    print x;
  }

  return inner;
}

var closure = outer();
closure();

// --------------------------------------------------------
// End